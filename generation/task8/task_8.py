# -*- coding: utf-8 -*-
"""Task-8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1n5ebhPveRuKEdsDXL-UHui2Rn33sf992
"""

import numpy as np
import sympy as sp

from sympy import  Point, Line,Line3D, Plane, Point3D, Segment, Ray


class Task8:
    def __init__(self) -> None:
        pass

    def generate(self):
        A = Point(np.random.randint(-15, 15),
                     np.random.randint(-15, 15),
                     np.random.randint(-15, 15))

        while True:
            PP = Point(np.random.randint(-15, 15),
                          np.random.randint(-15, 15),
                          np.random.randint(-15, 15))
            if PP != A:
                break

        A0 = Point3D(2*PP.x - A.x, 2*PP.y - A.y, 2*PP.z - A.z)
        AA0 = Line3D(A, A0) # Normal vector of plane

        P = Plane(PP, (A.x - A0.x, A.y - A0.y, A.z - A0.z)) # Plane

        task_text = f'Дана точка $A({A.x}, {A.y}, {A.z})$ и плоскость $P: {sp.latex(P.equation())} = 0$. ' \
                    f'Найти координаты точки $A_0$, расположенной симметрично точке $A$ относительно плоскости $P$.'

        answer_text = '\\renewcommand{\\arraystretch}{2.5} $$ ' \
                      + f'A_0 = \\left( {sp.latex(A0.x)}, \\,{sp.latex(A0.y)}, \\,{sp.latex(A0.z)} \\right)' \
                          .replace('frac', 'dfrac') \
                          .replace('\\left(\\begin{matrix}', '\\begin{pmatrix}') \
                          .replace('\\end{matrix}\\right)', '\\end{pmatrix}') \
                      + ' $$ \\renewcommand{\\arraystretch}{1}'

        return task_text, answer_text